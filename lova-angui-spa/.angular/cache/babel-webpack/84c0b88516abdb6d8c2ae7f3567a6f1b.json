{"ast":null,"code":"import { ErrorHandling } from '../../localserv/errorHandling';\nimport { ServConfig } from '../../servconfig';\nimport { HttpHeaders } from '@angular/common/http';\nimport { catchError, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../globalserv/alertify.service\";\nexport let LangTranslationService = /*#__PURE__*/(() => {\n  class LangTranslationService extends ErrorHandling {\n    constructor(http, alertifyService) {\n      super();\n      this.http = http;\n      this.alertifyService = alertifyService;\n      this.path = ServConfig.ApiPath + '/languages';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json' // 'Authorization':'Token'\n\n        })\n      };\n    }\n\n    getLanguages() {\n      return this.http.get(this.path).pipe(tap(data => {\n        return this.tapIntercepter(data);\n      }), catchError(this.handleError));\n    }\n\n    addWord(word, langType) {\n      let wordString = langType + ':' + JSON.stringify(word);\n      this.alertifyService.success(' addedd word  :   ' + wordString);\n    }\n\n  }\n\n  LangTranslationService.ɵfac = function LangTranslationService_Factory(t) {\n    return new (t || LangTranslationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AlertifyService));\n  };\n\n  LangTranslationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LangTranslationService,\n    factory: LangTranslationService.ɵfac\n  });\n  return LangTranslationService;\n})();","map":null,"metadata":{},"sourceType":"module"}