{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { UserService } from 'src/app/services/localserv/user.service';\nimport { User } from 'src/app/services/models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/localserv/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/globalserv/alertify.service\";\nimport * as i5 from \"@angular/common\";\n\nfunction UserRecordComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" Must \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserRecordComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" Must \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let UserRecordComponent = /*#__PURE__*/(() => {\n  class UserRecordComponent {\n    constructor(formBuilder, userService, activatedRoute, alertifyService, router) {\n      this.formBuilder = formBuilder;\n      this.userService = userService;\n      this.activatedRoute = activatedRoute;\n      this.alertifyService = alertifyService;\n      this.router = router;\n      this.user = new User();\n    }\n\n    ngOnInit() {\n      this.createRecordForm();\n      this.activatedRoute.params.subscribe(param => {\n        this.Id = param['Id'];\n\n        if (this.Id != undefined) {\n          this.userService.getUserById(param['Id']).subscribe(data => {\n            this.user = data;\n            this.recordForm.setValue({\n              userName: this.user.userName,\n              password: this.user.password\n            });\n          });\n        }\n      });\n    }\n\n    createRecordForm() {\n      return this.recordForm = this.formBuilder.group({\n        userName: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n\n    save() {\n      if (this.recordForm.valid) {\n        if (this.Id != undefined) {\n          this.user = Object.assign({}, this.recordForm.value);\n          this.user.id = this.Id;\n          this.userService.updateUser(this.user).subscribe(data => {\n            this.alertifyService.success('Updated : ' + data.userName + ' ' + data.password);\n            this.router.navigateByUrl('user-operation');\n          });\n        } else {\n          this.user = Object.assign({}, this.recordForm.value);\n          this.userService.addUser(this.user).subscribe(data => {\n            this.alertifyService.success('Recorded : ' + data.userName + ' ' + data.password);\n            this.router.navigateByUrl('user-operation');\n          });\n        }\n      }\n    }\n\n  }\n\n  UserRecordComponent.ɵfac = function UserRecordComponent_Factory(t) {\n    return new (t || UserRecordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.AlertifyService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  UserRecordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserRecordComponent,\n    selectors: [[\"app-user-record\"]],\n    features: [i0.ɵɵProvidersFeature([UserService])],\n    decls: 17,\n    vars: 10,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"userName\", \"name\", \"userName\", \"formControlName\", \"userName\", \"placeholder\", \"userName\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"]],\n    template: function UserRecordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Record User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function UserRecordComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵtemplate(5, UserRecordComponent_div_5_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 1);\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, UserRecordComponent_div_8_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 5);\n        i0.ɵɵtext(10, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"span\");\n        i0.ɵɵtext(12);\n        i0.ɵɵpipe(13, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"span\");\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.recordForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.recordForm.get(\"userName\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx.recordForm.get(\"userName\")) == null ? null : tmp_1_0.dirty));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.recordForm.get(\"password\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx.recordForm.get(\"password\")) == null ? null : tmp_2_0.dirty));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.recordForm.invalid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" recordForm.value: \", i0.ɵɵpipeBind1(13, 6, ctx.recordForm.value), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" recordForm.valid: \", i0.ɵɵpipeBind1(16, 8, ctx.recordForm.valid), \"\");\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i5.NgIf],\n    pipes: [i5.JsonPipe],\n    styles: [\"\"]\n  });\n  return UserRecordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}