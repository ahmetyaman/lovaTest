{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, tap } from 'rxjs';\nimport { ErrorHandling } from './errorHandling';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ChemistandcoronaService = /*#__PURE__*/(() => {\n  class ChemistandcoronaService extends ErrorHandling {\n    constructor(http) {\n      super();\n      this.http = http;\n      this.coronapath = 'https://api.collectapi.com/corona/countriesData';\n      this.chemistpath = 'https://api.collectapi.com/health/dutyPharmacy';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'content-type': 'application/json',\n          authorization: 'apikey 3J8d5BBrXqfmQ8RjdDhRef:4dEbxZPD6fDgoNLc10oxpi'\n        })\n      };\n    }\n\n    getCoronas() {\n      return this.http.get(this.coronapath, this.httpOptions).pipe(tap(data => {\n        return this.tapIntercepter(data);\n      }), catchError(this.handleError));\n    }\n\n    getChemists(ilce, il) {\n      let pPath = this.decoratePath(il, ilce);\n      return this.http.get(pPath, this.httpOptions).pipe(tap(data => {\n        return this.tapIntercepter(data);\n      }), catchError(this.handleError));\n    }\n\n    decoratePath(il, ilce) {\n      if (il || ilce) {\n        this.chemistpath = this.chemistpath + '?';\n\n        if (ilce) {\n          this.chemistpath = this.chemistpath + 'ilce=' + ilce;\n        }\n\n        if (il) {\n          if (ilce) this.chemistpath = this.chemistpath + '&';\n          this.chemistpath = this.chemistpath + 'il=' + il;\n        }\n      }\n\n      return this.chemistpath;\n    }\n\n  }\n\n  ChemistandcoronaService.ɵfac = function ChemistandcoronaService_Factory(t) {\n    return new (t || ChemistandcoronaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ChemistandcoronaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChemistandcoronaService,\n    factory: ChemistandcoronaService.ɵfac\n  });\n  return ChemistandcoronaService;\n})();","map":null,"metadata":{},"sourceType":"module"}